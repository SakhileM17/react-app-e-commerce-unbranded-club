{"version":3,"file":"static/js/60.ff2beafc.chunk.js","mappings":"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","sources":["components/CustomerOrders.js","redux/reducers/checkoutReducer.js","utils/moneyformatter.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { moneyFormat } from \"../utils/moneyformatter\";\r\n\r\nimport { calculateDelivery } from \"../redux/reducers/checkoutReducer\";\r\n\r\n\r\n\r\n\r\nconst CustomerOrder = ({orderInfo} ) => {\r\n\r\n    if (!orderInfo) {\r\n        return <div>Loading...</div>; // or any other fallback UI\r\n      }\r\n    \r\n      const { name, totalPrice , totalDelivery, address} = orderInfo;\r\n    \r\n      if (!totalPrice) {\r\n        return <div>No order information available</div>; // or any other fallback UI\r\n      }\r\n    \r\n\r\n    return (\r\n\r\n        <div className=\"checkout-main-container\">\r\n\r\n            <div  className=\"checkout-container\">\r\n\r\n                <div className=\"customer-order-header-container\">\r\n\r\n                    <div>\r\n                        <h1>Customer Latest Order</h1>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h1>Logo</h1>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <div className=\"customer-order-body-container\">\r\n\r\n                    <div className=\"customer-order-detail-container\">\r\n\r\n                        <div className=\"customer-order-detail-address-container\">\r\n\r\n                            <div className=\"customer-order-detail\">\r\n\r\n                                <h3><strong>Shipping Address  </strong></h3>\r\n\r\n                                <p></p>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"customer-order-detail\">\r\n\r\n                                <h3><strong>Billing Address  </strong></h3>\r\n\r\n                                <p>{address}</p>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"customer-order-item-container\">\r\n\r\n                            <div>\r\n\r\n                                <p>Product </p>\r\n\r\n                            </div>\r\n\r\n                            {orderInfo && \r\n                            \r\n                            <div>\r\n                                <p>Customer name : {name}</p>\r\n                            </div>}\r\n\r\n                            \r\n\r\n                            \r\n\r\n                        </div>\r\n\r\n                        <div className=\"customer-order-item-container\">\r\n\r\n                            <div>\r\n\r\n                                <strong>Billing Summary </strong>\r\n\r\n                            </div>\r\n\r\n                            <div>\r\n                                \r\n                                <div className=\"checkout-billing-info\">\r\n\r\n                                        <div>\r\n                                            <p>Items Total  </p>\r\n                                        </div>\r\n\r\n                                        <div>\r\n                                            <p>{moneyFormat(totalPrice)}</p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"checkout-billing-info\">\r\n\r\n                                        <div>\r\n                                            <p>Shipping (Free delivery for orders over R 500) </p>\r\n                                        </div>\r\n\r\n                                        <div>\r\n                                            <p>{moneyFormat (totalDelivery)}</p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n    \r\n                                    <div className=\"checkout-billing-info billing-total\">\r\n\r\n                                        <div>\r\n                                            <p>Total Total  </p>\r\n                                        </div>\r\n\r\n                                        <div>\r\n                                            <p>{moneyFormat(totalPrice)}</p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                            </div>\r\n\r\n                            \r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                \r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { orderInfo } = state.checkout || {};\r\n    console.log('Order Info:', orderInfo); // Add this line to check if orderInfo is being retrieved\r\n    return {\r\n        orderInfo,\r\n    };\r\n};\r\n\r\n  \r\n \r\n\r\nexport default connect (mapStateToProps)(CustomerOrder)","// Action Types\r\nexport const ADD_TO_CHECKOUT = 'ADD_TO_CHECK_OUT'\r\nexport const CLEAR_CHECKOUT = 'CLEAR_CHECKOUT'\r\nexport const SAVE_ORDER_INFO = 'SAVE_ORDER_INFO';\r\nexport const SET_ORDER_INFO = 'SET_ORDER_INFO'\r\n\r\n\r\n// initial state for the checkout\r\nconst initialState = {\r\n\r\n    items : [], // Initialize with an empty array\r\n    totalDelivery : 0,\r\n    orderInfo: null, // Initial state for orderInfo\r\n\r\n};\r\n\r\n//Action creators\r\n\r\n// add items to checkout\r\nexport const addToCheckOut = (item) => {\r\n\r\n    return {\r\n\r\n        type: ADD_TO_CHECKOUT, \r\n        payload : item\r\n\r\n    }\r\n}\r\n\r\n// clear checkout list\r\nexport const clearCheckout = () => {\r\n\r\n    return {\r\n      type: CLEAR_CHECKOUT,\r\n    };\r\n\r\n  };\r\n\r\n  //\r\n  export const saveOrderInfo = (orderInfo) => {\r\n    return {\r\n      type: SAVE_ORDER_INFO,\r\n      payload: orderInfo,\r\n    };\r\n  };    \r\n\r\n  export const setOrderInfo = (orderInfo) => ({\r\n\r\n    type: SET_ORDER_INFO,\r\n    payload: orderInfo,\r\n  });\r\n\r\n  // Define a selector function to calculate total price\r\nexport const calculateDelivery = (totalPrice) => {\r\n\r\n    // Calculate total delivery based on totalPrice\r\n    const totalDelivery = totalPrice === 0 ? 0 : (totalPrice >= 500 ? 0 : 500);\r\n\r\n    return {\r\n\r\n        totalDelivery\r\n    }\r\n\r\n  };\r\n\r\n  // reducer function \r\nconst checkoutReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n  \r\n        case ADD_TO_CHECKOUT:\r\n            console.log(\"Adding item to checkout:\", action.payload);\r\n            return {\r\n                ...state,\r\n                items: [...state.items, action.payload]\r\n                \r\n            };\r\n        \r\n        case CLEAR_CHECKOUT: \r\n            console.log(\"Clearing checkout\");\r\n            return {\r\n                ...state,\r\n                items: [],\r\n                totalDelivery: 0, // Reset total delivery when clearing checkout\r\n            };\r\n        \r\n        case SAVE_ORDER_INFO:\r\n            console.log(\"Saving order info:\", action.payload);\r\n            return {\r\n                ...state,\r\n                orderInfo: action.payload,\r\n             };\r\n        \r\n             case SET_ORDER_INFO:\r\n            console.log(\"Setting order info:\", action.payload);\r\n            return {\r\n              ...state,\r\n              orderInfo: action.payload,\r\n            };\r\n  \r\n        default: \r\n            \r\n            return state\r\n    }\r\n  };\r\n  \r\n  export default checkoutReducer\r\n\r\n  // checkoutReducer.js\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  \r\n  \r\n\r\n\r\n","export const moneyFormat = (number) => {\r\n\r\n    const formatter = new Intl.NumberFormat('en-ZA', {\r\n      style: 'currency',\r\n      currency: 'ZAR',\r\n      minimumFractionDigits: 2, // Show at least 2 decimal places\r\n    });\r\n  \r\n    return formatter.format(number);\r\n  }"],"names":["connect","state","orderInfo","checkout","console","log","_ref","_jsx","children","name","totalPrice","totalDelivery","address","className","_jsxs","moneyFormat","ADD_TO_CHECKOUT","SET_ORDER_INFO","addToCheckOut","item","type","payload","setOrderInfo","calculateDelivery","number","Intl","NumberFormat","style","currency","minimumFractionDigits","format"],"sourceRoot":""}