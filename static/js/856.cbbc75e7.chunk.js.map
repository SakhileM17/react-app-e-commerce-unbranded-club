{"version":3,"file":"static/js/856.cbbc75e7.chunk.js","mappings":"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","sources":["utils/requiredStar.js","data/countries.js","components/Order.js","components/Checkout.js","redux/reducers/checkoutReducer.js","utils/moneyformatter.js"],"sourcesContent":["/*\r\n    Shows red star on required form input\r\n*/\r\nimport React from 'react';\r\n\r\nconst RequiredStar = ({ required }) => {\r\n  return required ? <span style={{ color: 'red' }}>*</span> : null;\r\n};\r\n\r\nexport default RequiredStar;","export const Country = [\r\n    { countryName: 'South Africa' },\r\n];\r\n\r\n\r\nexport const City = [\r\n    { cityName: 'Johannesburg' },\r\n    { cityName: 'Cape Town' },\r\n    { cityName: 'Durban' },\r\n    { cityName: 'Pretoria' },\r\n    { cityName: 'Port Elizabeth' },\r\n    { cityName: 'Bloemfontein' },\r\n    { cityName: 'East London' },\r\n    { cityName: 'Nelspruit' },\r\n    { cityName: 'Kimberley' },\r\n    { cityName: 'Pietermaritzburg' }\r\n]\r\n\r\n","    import React from \"react\";\r\n    import { useState } from \"react\";\r\n\r\n    import { useNavigate } from \"react-router-dom\";\r\n    import { Link } from \"react-router-dom\";\r\n\r\n    import UnbrandedClubLogoBlack from '../assets/unbrandedClubLogoBlack.png' // summer/winter collection images\r\n\r\n\r\n\r\n    const Order = ({onClose, orderNumber, orderInfo}) =>{\r\n\r\n        const navigate = useNavigate()\r\n\r\n        const continueShopping = () =>{\r\n\r\n            // Close order modal\r\n            onClose()\r\n            \r\n            // navigate to home page\r\n            navigate('/')\r\n\r\n        }\r\n\r\n        return (\r\n\r\n            <div className=\"Main-order-container\">\r\n\r\n                <div className=\"order-container\">\r\n\r\n                    <div className=\"order-description-header\">\r\n\r\n                        <div>\r\n\r\n                            <img src={UnbrandedClubLogoBlack} alt=\"unbranded-club-logo black\"/>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div>\r\n\r\n                            <h1>Order Confirmed</h1>\r\n\r\n                            <p>\r\n                                Thanks for shopping at Unbranded Club (pty) ltd. We are happy to tell inform you that this order \r\n                                is now Confirmed and we will begin processing your pruchase for dispatch.\r\n                            </p>\r\n\r\n                            <p>\r\n                                Please note that Payment Gate , this app was built as a project and e-coomerce simulation\r\n                            </p>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    \r\n\r\n                    <div className=\"order-descriprion-footer\">\r\n\r\n                        <div className=\"order-links-container\">\r\n                            \r\n                            <div>\r\n\r\n                                <p>Order Number : {orderNumber}</p>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                        \r\n                        <div className=\"order-button-container\">\r\n                            \r\n                            <div>\r\n                                <button className=\"order-button-continue-shopping\" onClick={continueShopping}>Continue Shopping</button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    \r\n                        \r\n\r\n                    </div>\r\n\r\n                    \r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n\r\n    export default Order","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { useState } from \"react\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { moneyFormat } from \"../utils/moneyformatter\";\r\n\r\nimport RequiredStar from \"../utils/requiredStar\";\r\n\r\nimport { Country } from \"../data/countries\";\r\n\r\n\r\nimport { calculateDelivery } from \"../redux/reducers/checkoutReducer\";\r\n\r\nimport { setOrderInfo} from \"../redux/reducers/checkoutReducer\";\r\n\r\nimport { clearCart } from \"../redux/reducers/cartReducer\";\r\n\r\nimport Order from \"./Order\";\r\n\r\nimport UnbrandedClubLogoBlack from '../assets/unbrandedClubLogoBlack.png' // summer/winter collection images\r\n\r\n\r\n\r\n/* \r\n\r\n*/\r\n\r\nconst Checkout = ({totalPrice, totalDelivery, clearCart}) => {\r\n\r\n// States\r\nconst [checked, setChecked] = useState(false);// terms and conditions check box\r\nconst [errorMsg, setErrorsMsg] = useState('') //\r\nconst [deliveryOption, setDeliveryOption] = useState(\"standard\");\r\n\r\nconst [isOrderModalOpen, setOrderModal] = useState(false) // state to manage order modal \r\nconst [myPdfData, setMyPdfData] = useState(null)\r\n\r\nconst [orderNumber, setOrderNumber] = useState(null); // Initialize orderNumber state\r\nconst [formData, setFormData] = useState(null); // State to store form data\r\n\r\n//\r\nconst navigate = useNavigate();\r\n\r\n \r\nconst cancelCheckout = () => {\r\n\r\n    console.log('Navigate to cart')\r\n\r\n    navigate('/cart')\r\n}\r\n\r\nconst handleChange = () => {\r\n    setChecked(!checked);\r\n  };\r\n\r\n  \r\n  const handleDeliveryOptionChange = (event) => {\r\n\r\n    setDeliveryOption(event.target.value);\r\n\r\n  };\r\n\r\n// Hande checkout\r\nconst handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Perform form validation\r\n    const form = event.target;\r\n    const formData = new FormData(form);\r\n\r\n    setFormData(formData);\r\n\r\n    const fields = [\r\n        { name: 'name', label: 'Name' },\r\n        { name: 'surname', label: 'Surname' },\r\n        { name: 'email', label: 'Email' },\r\n        { name: 'phone', label: 'Phone Number' },\r\n        { name: 'address', label: 'Street Address' },\r\n        { name: 'unit-number', label: 'House Number/Appartment Number/Unit Number' },\r\n        { name: 'city', label: 'City' },\r\n        { name: 'postal-code', label: 'Postal Code' }\r\n    ];\r\n\r\n    let errors = {};\r\n\r\n    fields.forEach(field => {\r\n        const value = formData.get(field.name);\r\n        if (!value) {\r\n            errors[field.name] = `${field.label} field cannot be empty`;\r\n        } else {\r\n            // Remove the error message if the field is filled\r\n            delete errors[field.name];\r\n        }\r\n    });\r\n\r\n    // Set the error messages state with concatenated messages\r\n    setErrorsMsg(Object.values(errors).join(\", \"));\r\n\r\n    // If terms and conditions checkbox is not checked, show error message\r\n    if (!checked) {\r\n        setErrorsMsg(prevMsg => prevMsg + \", Please accept the terms and conditions.\");\r\n        return;\r\n    }\r\n\r\n    // If there are no errors, clear the error messages\r\n    if (Object.keys(errors).length === 0) {\r\n        setErrorsMsg(\"\");\r\n        // Continue with the checkout process\r\n\r\n        // Get form data\r\n        const generateOrderNumber = () => {\r\n            // Generate a random alphanumeric string of length 8\r\n            return Math.random().toString(36).substring(2, 10).toUpperCase();\r\n        };\r\n\r\n        // Generate order number\r\n        const newOrderNumber = generateOrderNumber();\r\n\r\n        // Update orderNumber state\r\n        setOrderNumber(newOrderNumber);\r\n\r\n        const orderInfo = {\r\n            newOrderNumber,\r\n            name: formData.get('name'),\r\n            surname: formData.get('surname'),\r\n            email: formData.get('email'),\r\n            phone: formData.get('phone'),\r\n            address: formData.get('address'),\r\n            unitNumber: formData.get('unit-number'),\r\n            city: formData.get('city'),\r\n            postalCode: formData.get('postal-code'),\r\n            complexName: formData.get('complex-name') || '',\r\n            description: formData.get('description') || '',\r\n            totalPrice,\r\n            totalDelivery,\r\n        };\r\n\r\n        // Pass form information to the MyPDF component\r\n        setMyPdfData(orderInfo);\r\n\r\n        // Pass form information to the Order component or handle order placement here\r\n        console.log('Order information:', orderInfo);\r\n\r\n        // Set order information in the Redux store\r\n        setOrderInfo(orderInfo);\r\n\r\n        // Perform checkout logic here, then show the order modal\r\n        setOrderModal(true);\r\n\r\n        \r\n        // Clear the cart when user submits the form\r\n        clearCart(); // Dispatch clearCart action\r\n    }\r\n};\r\n\r\n\r\nconst handleCloseOrderModal = () => {\r\n\r\n    setOrderModal(false);\r\n    // Redirect to home or any other page after closing the order modal\r\n    navigate(\"/\");\r\n\r\n};\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"checkout-main-container\">\r\n\r\n            <div  className=\"checkout-container\">\r\n\r\n                <div className=\"checkout-header-container\">\r\n\r\n                    <div className=\"cart-header\">\r\n\r\n                        <h1>Checkout</h1>\r\n\r\n                    </div>\r\n                    \r\n                    <div className=\"cart-header\">\r\n\r\n                        <img src={UnbrandedClubLogoBlack} alt=\"unbranded-club-logo black\"/>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                \r\n\r\n                <div className=\"checkout-body-container\">\r\n\r\n                    <form onSubmit={handleSubmit}>\r\n\r\n                        <div className=\"checkout-body-form-container\">\r\n\r\n                            <div className=\"chechout-billing-form-container\">\r\n\r\n                                {/* Erros */}\r\n                                <div className=\"checkout-form-error-container\">\r\n\r\n                                    \r\n\r\n                                    {errorMsg && errorMsg.split(',').map((error, index) => (\r\n\r\n                                        <div> \r\n                                            \r\n\r\n                                            <p key={index} className=\"errorMsg\"> - {error}</p>\r\n                                        </div>\r\n\r\n                                        \r\n                                    ))}\r\n                                </div>\r\n\r\n                                {/* Form element */}\r\n\r\n                                <div className=\"checkout-form-element-container\">\r\n\r\n                                    <div className=\"checkout-form-label\">\r\n\r\n                                        <label>\r\n                                            <p>First Name <RequiredStar required /></p>\r\n                                        </label>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"checkout-form-input\">\r\n\r\n                                        <input className=\"checkout-input\" placeholder=\"Enter your name\" type='name' name='name' />\r\n\r\n                                    </div>\r\n                                    \r\n\r\n                                </div>\r\n\r\n                                <div className=\"checkout-form-element-container\">\r\n\r\n                                    <div className=\"checkout-form-label\">\r\n\r\n                                        <label>\r\n                                            <p>Surname <RequiredStar required /></p>\r\n                                        </label>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"checkout-form-input\">\r\n\r\n                                        <input className=\"checkout-input\" placeholder=\"Enter your surname\" type='name' name='surname'/>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"checkout-form-element-container\">\r\n\r\n                                    <div className=\"checkout-form-label\">\r\n\r\n                                        <label>\r\n                                            <p>Email adress <RequiredStar required /></p>\r\n                                        </label>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"checkout-form-input\">\r\n\r\n                                        <input className=\"checkout-input\" placeholder=\"Enter your email address\" type='email' name='email'/>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"checkout-form-element-container\">\r\n\r\n                                    <div className=\"checkout-form-label\">\r\n\r\n                                        <label>\r\n                                            <p>Phone Number <RequiredStar required /></p>\r\n                                        </label>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"checkout-form-input\">\r\n\r\n                                        <input className=\"checkout-input\" placeholder=\"Enter your phone number\" type='phone' name='phone'/>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"checkout-form-element-container\">\r\n\r\n                                    <div className=\"checkout-form-label\">\r\n\r\n                                        <label>\r\n                                            <p>Country <RequiredStar required /></p>\r\n                                        </label>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"checkout-form-input\">\r\n\r\n                                        <select className=\"checkout-select\">\r\n\r\n                                            {Country.map((country) => (\r\n                                                \r\n                                                <option key={country.countryName} value={country.countryName}>\r\n                                                    {country.countryName}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </select>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"checkout-form-element-container\">\r\n\r\n                                    <div className=\"checkout-form-label\">\r\n\r\n                                        <label>\r\n                                            <p>Stree Address <RequiredStar required /></p>\r\n                                        </label>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"checkout-form-input\">\r\n\r\n                                        <input className=\"checkout-input\" placeholder=\"Enter your street address\" type='address' name='address'/>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"checkout-form-element-container\">\r\n\r\n                                    <div className=\"checkout-form-label\">\r\n\r\n                                        <label>\r\n                                            <p>House/Appartment/Unit Number <RequiredStar required /></p>\r\n                                        </label>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"checkout-form-input\">\r\n\r\n                                        <input className=\"checkout-input\" placeholder=\"Enter number\" type='number' name='unit-number'/>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"checkout-form-element-container\">\r\n\r\n                                    <div className=\"checkout-form-label\">\r\n\r\n                                        <label>\r\n                                            <p>Complex Name</p>\r\n                                        </label>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"checkout-form-input\">\r\n\r\n                                        <input className=\"checkout-input\" placeholder=\"Enter your complex name\" type='name' name='complex-name'/>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"checkout-form-element-container\">\r\n\r\n                                    <div className=\"checkout-form-label\">\r\n\r\n                                        <label>\r\n                                            <p>City <RequiredStar required /></p>\r\n                                        </label>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"checkout-form-input\">\r\n\r\n                                        <input className=\"checkout-input\" placeholder=\"Enter city\" type='text' name='city'/>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                \r\n                                <div className=\"checkout-form-element-container\">\r\n\r\n                                    <div className=\"checkout-form-label\">\r\n\r\n                                        <label>\r\n                                            <p>Postal Code <RequiredStar required /></p>\r\n                                        </label>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"checkout-form-input\">\r\n\r\n                                        <input className=\"checkout-input\" placeholder=\"Enter your postal code\" type='number' name='postal-code'/>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"checkout-form-element-container\">\r\n\r\n                                    <div className=\"checkout-form-label\">\r\n\r\n                                        <label>\r\n                                            <p>Instructions </p>\r\n                                        </label>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"checkout-form-input\">\r\n\r\n                                        <textarea className=\"checkout-input\" placeholder=\"Enter any special message you have for the courier\" type='number' name='description'/>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"checkout-form-element-container\">\r\n\r\n                                    <div className=\"checkbox-form-label\">\r\n\r\n                                        <label>\r\n\r\n                                            <input \r\n                                                className=\"checkout-check-box\" \r\n                                                type=\"checkbox\" \r\n                                                checked={checked}\r\n                                                onChange={handleChange}\r\n                                            />\r\n\r\n                                        </label>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"checkbox-form-input\">\r\n\r\n                                        <p>\r\n                                            I agree to receive information, special offers and promotions based on my interests and preferences from \r\n                                            adidas Unbranded Club (Pty) Ltd. I understand, Unbranded Club will use my email address, contact number and other \r\n                                            personal data listed in the Privacy Notice to send me information about the Unbranded brand through in-app \r\n                                            notifications, SMS, whatsapp and email marketing messages to the email provided to checkout on this account.\r\n                                        </p>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                \r\n                            \r\n                            </div>\r\n                            \r\n                            {/* Right side of the checkout summary */}\r\n                            <div className=\"checkout-billing-summary-container\">\r\n\r\n                                <div className=\"checkout-shipping-container\">\r\n\r\n                                    <div className=\"checkout-shipping-info\">\r\n\r\n                                        <h1>Delivery Method method</h1>\r\n\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <p>Choose your delivery method. Your order can be delivered to your door or collected at our cocnept \r\n                                            store in Johannesburg</p>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"checkout-billing-container\">\r\n\r\n                                    <div className=\"checkout-info-container\">\r\n\r\n                                        <h1>Billing Summary  </h1>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"checkout-billing-info\">\r\n\r\n                                        <div>\r\n                                            <p>Items Total  </p>\r\n                                        </div>\r\n\r\n                                        <div>\r\n                                            <p>{moneyFormat(totalPrice)}</p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"checkout-billing-info\">\r\n\r\n                                        <div>\r\n                                            <p>Shipping (Free delivery for orders over R 500) </p>\r\n                                        </div>\r\n\r\n                                        <div>\r\n                                            <p>{moneyFormat (totalDelivery)}</p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n    \r\n                                    <div className=\"checkout-billing-info billing-total\">\r\n\r\n                                        <div>\r\n                                            <p>Total Total  </p>\r\n                                        </div>\r\n\r\n                                        <div>\r\n                                            <p>{moneyFormat(totalPrice)}</p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n    \r\n\r\n                                </div>\r\n\r\n                                <div className=\"checkout-terms-container\">\r\n\r\n                                    <div>\r\n                                        <p>\r\n                                           By clicking 'Pay and Place Order' you'll see your order confirmation. This a e-commerce demo is purley a e-commerce sim, it's not integrated to a payment gate. </p>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"checkout-button-container\">\r\n\r\n                                    <div>\r\n                                        <button className=\"checkout-button-cancel\" onClick={() => {cancelCheckout()}}> Cancel Checkout</button>\r\n                                    </div>\r\n\r\n                                    <div>\r\n\r\n                                        <button className=\"checkout-button-pay\" type=\"submit\" > Pay and Place Order</button>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                                \r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                    </form>\r\n\r\n                </div>\r\n\r\n                {isOrderModalOpen && (\r\n\r\n                    <Order \r\n                    \r\n                        onClose={handleCloseOrderModal}\r\n                        orderNumber={orderNumber}\r\n                        formData={formData}\r\n            \r\n                    />\r\n                )}\r\n\r\n                \r\n\r\n\r\n            </div>\r\n    \r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    const { totalPrice } = state.cart;\r\n    const { totalDelivery } = calculateDelivery(totalPrice); // Call calculateDelivery function and destructure totalDelivery\r\n\r\n    return {\r\n        totalPrice,\r\n        totalDelivery\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    \r\n    return {\r\n  \r\n      //\r\n      setOrderInfo: (orderInfo) => dispatch(setOrderInfo(orderInfo)),\r\n      clearCart: () => dispatch(clearCart()) // Add clearCart to mapDispatchToProps\r\n\r\n  \r\n    };\r\n  };\r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps)(Checkout)","// Action Types\r\nexport const ADD_TO_CHECKOUT = 'ADD_TO_CHECK_OUT'\r\nexport const CLEAR_CHECKOUT = 'CLEAR_CHECKOUT'\r\nexport const SAVE_ORDER_INFO = 'SAVE_ORDER_INFO';\r\nexport const SET_ORDER_INFO = 'SET_ORDER_INFO'\r\n\r\n\r\n// initial state for the checkout\r\nconst initialState = {\r\n\r\n    items : [], // Initialize with an empty array\r\n    totalDelivery : 0,\r\n    orderInfo: null, // Initial state for orderInfo\r\n\r\n};\r\n\r\n//Action creators\r\n\r\n// add items to checkout\r\nexport const addToCheckOut = (item) => {\r\n\r\n    return {\r\n\r\n        type: ADD_TO_CHECKOUT, \r\n        payload : item\r\n\r\n    }\r\n}\r\n\r\n// clear checkout list\r\nexport const clearCheckout = () => {\r\n\r\n    return {\r\n      type: CLEAR_CHECKOUT,\r\n    };\r\n\r\n  };\r\n\r\n  //\r\n  export const saveOrderInfo = (orderInfo) => {\r\n    return {\r\n      type: SAVE_ORDER_INFO,\r\n      payload: orderInfo,\r\n    };\r\n  };    \r\n\r\n  export const setOrderInfo = (orderInfo) => ({\r\n\r\n    type: SET_ORDER_INFO,\r\n    payload: orderInfo,\r\n  });\r\n\r\n  // Define a selector function to calculate total price\r\nexport const calculateDelivery = (totalPrice) => {\r\n\r\n    // Calculate total delivery based on totalPrice\r\n    const totalDelivery = totalPrice === 0 ? 0 : (totalPrice >= 500 ? 0 : 500);\r\n\r\n    return {\r\n\r\n        totalDelivery\r\n    }\r\n\r\n  };\r\n\r\n  // reducer function \r\nconst checkoutReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n  \r\n        case ADD_TO_CHECKOUT:\r\n            console.log(\"Adding item to checkout:\", action.payload);\r\n            return {\r\n                ...state,\r\n                items: [...state.items, action.payload]\r\n                \r\n            };\r\n        \r\n        case CLEAR_CHECKOUT: \r\n            console.log(\"Clearing checkout\");\r\n            return {\r\n                ...state,\r\n                items: [],\r\n                totalDelivery: 0, // Reset total delivery when clearing checkout\r\n            };\r\n        \r\n        case SAVE_ORDER_INFO:\r\n            console.log(\"Saving order info:\", action.payload);\r\n            return {\r\n                ...state,\r\n                orderInfo: action.payload,\r\n             };\r\n        \r\n             case SET_ORDER_INFO:\r\n            console.log(\"Setting order info:\", action.payload);\r\n            return {\r\n              ...state,\r\n              orderInfo: action.payload,\r\n            };\r\n  \r\n        default: \r\n            \r\n            return state\r\n    }\r\n  };\r\n  \r\n  export default checkoutReducer\r\n\r\n  // checkoutReducer.js\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  \r\n  \r\n\r\n\r\n","export const moneyFormat = (number) => {\r\n\r\n    const formatter = new Intl.NumberFormat('en-ZA', {\r\n      style: 'currency',\r\n      currency: 'ZAR',\r\n      minimumFractionDigits: 2, // Show at least 2 decimal places\r\n    });\r\n  \r\n    return formatter.format(number);\r\n  }"],"names":["_ref","required","_jsx","style","color","children","Country","countryName","onClose","orderNumber","orderInfo","navigate","useNavigate","className","_jsxs","src","UnbrandedClubLogoBlack","alt","onClick","continueShopping","connect","state","totalPrice","cart","totalDelivery","calculateDelivery","dispatch","setOrderInfo","clearCart","checked","setChecked","useState","errorMsg","setErrorsMsg","deliveryOption","setDeliveryOption","isOrderModalOpen","setOrderModal","myPdfData","setMyPdfData","setOrderNumber","formData","setFormData","onSubmit","event","preventDefault","form","target","FormData","errors","name","label","forEach","field","get","concat","Object","values","join","keys","length","newOrderNumber","generateOrderNumber","Math","random","toString","substring","toUpperCase","surname","email","phone","address","unitNumber","city","postalCode","complexName","description","console","log","prevMsg","split","map","error","index","RequiredStar","placeholder","type","country","value","onChange","handleChange","moneyFormat","Order","handleCloseOrderModal","ADD_TO_CHECKOUT","SET_ORDER_INFO","addToCheckOut","item","payload","number","Intl","NumberFormat","currency","minimumFractionDigits","format"],"sourceRoot":""}