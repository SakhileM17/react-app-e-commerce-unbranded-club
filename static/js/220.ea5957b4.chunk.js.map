{"version":3,"file":"static/js/220.ea5957b4.chunk.js","mappings":"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","sources":["../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js","data/product.js","utils/modals/productmodal.js","utils/modals/toast.js","components/Collections.js","redux/reducers/SelectQtyReducer.js","redux/reducers/selectSizeReducer.js","utils/moneyformatter.js"],"sourcesContent":["const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import sweaterImg from '../assets/products/product-sweater.png';\r\nimport joggersImg from '../assets/products/product-joggers.png';\r\nimport trackImg from '../assets/products/products-tracksuit.png';\r\n\r\nexport const Products = [\r\n\r\n    { id: {},img: sweaterImg ,name: 'sweater', category: 'tracksuit', price: '500', qty: { S: 2, M: 35, L: 20 }, color: 'grey', description: 'Our club unbranded sweater seamlessly blends the latest streetwear fashion with comfort and versatility, making it perfect for both exercise and stylish everyday wear' },\r\n    { id: {},img: joggersImg ,name: 'jogger', category: 'jogger', price: '800', qty: { S:8, M:4,L: 1 }, color: 'grey' , description: 'Our club unbranded joggers seamlessly blends the latest streetwear fashion with comfort and versatility, making it perfect for both exercise and stylish everyday wear'},\r\n    { id: {},img: trackImg ,name: 'tracksuit', category: 'tracksuit', price: '500', qty: { S: 2, M: 35, L: 20 }, color: 'grey', description: 'Our unbranded tracksuit consist of our sweater and joggers seamlessly blends the latest streetwear fashion with comfort and versatility, making it perfect for both exercise and stylish everyday wear.'},\r\n    \r\n];\r\n\r\n","import React, { useState } from \"react\";\r\nimport \"../../styles/modals.css\";\r\n\r\nimport { moneyFormat } from \"../moneyformatter\";\r\n\r\nimport UnbrandedClubLogoBlack from '../../assets/unbrandedClubLogoBlack.png'\r\n\r\nconst CustomProductModal = ({ product, onClose, onSubmit }) => {\r\n    \r\n    const [selectedSize, setSelectedSize] = useState(\"\"); // State to manage selected size\r\n    const [selectedQty, setSelectedQty] = useState(1); // State to manage selected quantity\r\n\r\n    const handleSizeChange = (e) => {\r\n        setSelectedSize(e.target.value);\r\n    };\r\n\r\n    const handleQtyChange = (e) => {\r\n        setSelectedQty(parseInt(e.target.value));\r\n    };\r\n\r\n    const handleAddToCart = (event) => {\r\n\r\n        \r\n        // Check if size is selected\r\n        if (!selectedSize) {\r\n            alert(\"Please select a size.\");\r\n            return;\r\n        }\r\n\r\n        // Call onSubmit function with selected product, size, and quantity\r\n        onSubmit({ ...product, size: selectedSize, qty: selectedQty });\r\n        onClose(); // Close the modal after adding to cart\r\n    };\r\n\r\n    return (\r\n\r\n        <div className=\"modal-container\">\r\n\r\n\r\n            <div className=\"product-modal-container\">\r\n\r\n                <div className=\"close-button-container\">\r\n                    <button className=\"close-button \" onClick={onClose}>Close</button>\r\n                </div>\r\n\r\n                <div className=\"product-modal-header-container\">\r\n\r\n                    <div className=\"unbranded-club-Logo-container\">\r\n                        <h1>Product Info</h1>\r\n                    </div>\r\n\r\n                    <div className=\"unbranded-club-Logo-container\">\r\n                        <img src={UnbrandedClubLogoBlack} alt=\"unbranded-club-logo-black\" className=\"unbranded-club-logo-black\"/>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"product-modal-information-container\">\r\n\r\n                    <div className=\"product-image-container\">\r\n                        <img src={product.img} alt={`${product.name} pictured`} className=\"product-image\" />\r\n                    </div>\r\n\r\n                    <div className=\"product-description-container\">\r\n                        \r\n                        <div className=\"product-name-container\">\r\n                            <h2>Unbranded Club - {product.name}</h2>\r\n                        </div>\r\n\r\n                        <div className=\"product-price-container\">\r\n                            <p><strong>Price: {moneyFormat(product.price)} </strong></p>\r\n                        </div>\r\n\r\n                        <div className=\"product-price-container\">\r\n                            <p>{product.description}</p>\r\n                        </div>\r\n                        \r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomProductModal;\r\n","import React from \"react\";\r\n\r\n//image\r\nimport toasterTick from '../../assets/toastertick.png' // summer/winter collection images\r\n\r\n/* Notification toaster that apears everytime a user adds an item to a cart */\r\n\r\nconst Toast = ({message, onClose}) => {\r\n\r\n    return (\r\n\r\n        <div className=\"toast\">\r\n\r\n            <div className=\"toast-button-container\">\r\n\r\n                <img  className='toast-tick-img' src={toasterTick} alt=\"tick black\"/>\r\n\r\n            </div>\r\n\r\n            <div className=\"toast-button-container\">\r\n                <p>{message}</p>\r\n            </div>\r\n\r\n            <div className=\"toast-button-container\">\r\n                <button className=\"toast-close-button\" onClick={onClose}>View</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Toast","import React, { useReducer, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport {connect} from 'react-redux'\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { Products } from \"../data/product\";\r\n\r\n/* Reducers */\r\n// import selectedSizesReducer, { selectSize }  from \"../redux/reducers/collectionsReducer\";\r\n\r\nimport selectedSizesReducer, {selectSize} from \"../redux/reducers/selectSizeReducer\";\r\nimport selectedQtyReducer, {selectQty} from \"../redux/reducers/SelectQtyReducer\";\r\n\r\n\r\nimport { addToCart } from \"../redux/reducers/cartReducer\";\r\n\r\nimport { moneyFormat } from \"../utils/moneyformatter\";\r\n\r\nimport CustomProductModal from \"../utils/modals/productmodal\";\r\nimport Toast from \"../utils/modals/toast\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Collection = ({addToCart}) => {\r\n\r\n    // State to manage selected size for each product\r\n    const [selectedSizes, dispatchSizes] = useReducer(selectedSizesReducer, {});\r\n    const [selectedQty, dispatchQty] = useReducer(selectedQtyReducer,{})\r\n    const [selectedProduct, setSelectedProduct] = useState(null); // State to hold the selected product\r\n\r\n    const [productErrors, setProductErrors] = useState({}); // Maintain errors for each product\r\n\r\n    const [showToast, setShowToast] = useState(false); // Manage toast visibility\r\n    const [toastMessage, setToastMessage] = useState(\"\"); // Toast message state\r\n\r\n    const [setCartItems] = useState([]); // Define cartItems state\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        let timer;\r\n        if (showToast) {\r\n            timer = setTimeout(() => {\r\n                setShowToast(false);\r\n                setToastMessage(\"\"); // Clear toast message\r\n            }, 3000); // Close toast after 3 seconds\r\n        }\r\n        return () => clearTimeout(timer);\r\n    }, [showToast]);\r\n    \r\n\r\n    \r\n    const handleImageOnClick = (product) => {\r\n        setSelectedProduct(product); // Set the selected product when clicking on the image\r\n        setProductErrors({}); // Clear errors when selecting a new product\r\n    };\r\n\r\n    const handleSizeChange = (index, size) => {\r\n        dispatchSizes(selectSize(index, size));\r\n    };\r\n\r\n    \r\n\r\n    const handleQtyChange = (index, quantity) => {\r\n        dispatchQty(selectQty(index, parseInt(quantity)));\r\n      };\r\n      \r\n\r\n    const handleOnSubmit = (event, index, product) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const selectedQty = parseInt(event.target.elements.qty.value);\r\n        \r\n\r\n        if (!selectedQty) {\r\n            setProductErrors({ ...productErrors, [index]: \"Please select a quantity.\" });\r\n            return;\r\n        }\r\n        \r\n        if (selectedQty > 0) {\r\n            const cartItem = { \r\n                ...product, \r\n                id: uuidv4(), // Generate UUID and assign it to the product\r\n                size: selectedSizes[index], \r\n                qty: selectedQty \r\n            \r\n            };\r\n\r\n            \r\n            \r\n            setProductErrors({ ...productErrors, [index]: \"\" }); // Clear error if product is added to cart\r\n            addToCart(cartItem);\r\n\r\n            setToastMessage(`${product.name} added to cart successfully`);\r\n            setShowToast(true);// Show toast when product is added to cart\r\n            \r\n            \r\n        }\r\n    };\r\n\r\n    const closeToast = () => {\r\n\r\n        setToastMessage(\"\"); // Clear toast message\r\n        setShowToast(false);\r\n\r\n    };\r\n\r\n    const navigateToCart = () => {\r\n\r\n        \r\n\r\n        navigate('/cart')\r\n\r\n\r\n    }\r\n\r\n    \r\n    \r\n\r\n    return (\r\n        <div className=\"catalogue-container\">\r\n            <div className=\"catalogue-header-container\">\r\n                <div className=\"catalogue-header-elements\">\r\n                    <h1>2022 Collection</h1>\r\n                    <p>Shop our latest 2022 winter collection</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"catalgue-products-container\">\r\n                {/* Map through Products array */}\r\n                {Products.map((product, index) => (\r\n                    <div className=\"product-container\" key={index}>\r\n                        {/* Product Form */}\r\n                        <form onSubmit={(event) => handleOnSubmit(event, index, product)} className=\"product-form-container\"> {/* Pass index and product */}\r\n                            {/* Product Image */}\r\n                            <div className=\"form-element\">\r\n                                <img src={product.img} alt=\"\" className=\"product-image\" onClick={() => handleImageOnClick(product)} /> {/* Pass a function reference */}\r\n                            </div>\r\n                            {/* Brand Name */}\r\n                            <div className=\"form-element\">\r\n                                <h3>Club Unbranded</h3>\r\n\r\n                            </div>\r\n                            {/* Product type */}\r\n                            <div className=\"form-element\">\r\n                                <p>{product.category}</p>\r\n                            </div>\r\n                            {/* Product Price & Product QTY*/}\r\n                            <div className=\"form-element\">\r\n                                {/* Product Price */}\r\n                                <div>\r\n                                    <p>{moneyFormat(product.price)}</p>\r\n                                </div>\r\n                                {/* Product qty */}\r\n                                <div className=\"form-element\">\r\n\r\n                                    <label className=\"form-element-label\">Size :</label>\r\n\r\n                                        <select onChange={(e) => handleSizeChange(index, e.target.value)} value={selectedSizes[index] || ''}>\r\n                                            <option disabled value=''>Select size</option>\r\n                                            {Object.keys(product.qty).map((size) => (\r\n                                                <option key={size} value={size}>\r\n                                                    {size}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n\r\n                                </div>\r\n                                {/* Product Qty */}\r\n                                <div className=\"form-element\">\r\n                                    <label className=\"form-element-label\">Qty :</label>\r\n\r\n                                    <select name=\"qty\" onChange={(e) => handleQtyChange(index, e.target.value)} value={selectedQty[index] || ''}>\r\n                                        <option disabled value=''>Select Qty</option>\r\n                                        {[...Array(Math.min(4, product.qty[selectedSizes[index]] || 0)).keys()].map((quantity) => (\r\n                                            <option key={quantity} value={quantity + 1}>\r\n\r\n                                                {quantity + 1}\r\n\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                </div>\r\n                                {/* Product Button */}\r\n                                <div className=\"form-element-button-container\">\r\n                                    <button className=\"product-shop-button\" type=\"submit\">\r\n                                        Add to Cart\r\n                                    </button>\r\n                                </div>\r\n\r\n                                \r\n                                \r\n                                \r\n\r\n                                \r\n                            </div>\r\n\r\n                            <div>\r\n                                {productErrors[index] && <p className=\"errorMsg\">{productErrors[index]}</p>}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                ))}\r\n                \r\n            </div>\r\n\r\n            {/* Render modal if a product is selected */}\r\n            {selectedProduct && (\r\n                <CustomProductModal\r\n                    product={selectedProduct}\r\n                    onClose={() => setSelectedProduct(null)}\r\n                    onSubmit={(product) => {\r\n                        setCartItems(prevCartItems => [...prevCartItems, product]);\r\n                        setSelectedProduct(null); // Close the modal after adding to cart\r\n                    }}\r\n                />\r\n            )}\r\n\r\n            {/* Render toast when product is added */}\r\n            {showToast && (\r\n                <Toast\r\n                    message={toastMessage}\r\n                    onClose={navigateToCart}\r\n                />\r\n            )}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    selectedSizes: state.selectedSizes,\r\n    selectedQty: state.selectedQty,\r\n\r\n  });\r\n\r\nexport default connect(mapStateToProps, { addToCart })(Collection);\r\n","/* Reducer - To select Item size  */\r\nconst initialState = {}; // Initial state for selected sizes\r\n\r\nexport const SELECT_QTY = 'SELECT_QTY'\r\n\r\n// action \r\nexport const selectQty = (index,qty) => (\r\n    {\r\n      type: SELECT_QTY,\r\n      payload: {index, qty}\r\n    }\r\n  )\r\n\r\n  // reducer function\r\n  const selectedQtyReducer = (state =initialState, action) => {\r\n\r\n    switch(action.type) {\r\n  \r\n      case SELECT_QTY:\r\n        const {index, qty} = action.payload;\r\n        return {...state, [index] : qty};\r\n  \r\n        default:\r\n          return state\r\n  \r\n    }\r\n  }\r\n\r\n  export default selectedQtyReducer","const initialState = {}; // Initial state for selected sizes\r\n\r\n/* constants */\r\nexport const SELECT_SIZE = 'SELECT_SIZE';\r\n\r\n\r\n// action\r\nexport const selectSize = (index, size) => ({\r\n\r\n  type: SELECT_SIZE,\r\n  payload: { index, size },\r\n\r\n});\r\n\r\n\r\nconst selectedSizesReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case SELECT_SIZE:\r\n      const { index, size } = action.payload;\r\n      return { ...state, [index]: size };\r\n\r\n    default:\r\n      return state;\r\n\r\n  }\r\n};\r\n\r\n\r\n\r\nexport  default selectedSizesReducer;","export const moneyFormat = (number) => {\r\n\r\n    const formatter = new Intl.NumberFormat('en-ZA', {\r\n      style: 'currency',\r\n      currency: 'ZAR',\r\n      minimumFractionDigits: 2, // Show at least 2 decimal places\r\n    });\r\n  \r\n    return formatter.format(number);\r\n  }"],"names":["randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","arguments","length","undefined","options","buf","native","rnds","random","Products","id","img","name","category","price","qty","S","M","L","color","description","_ref","product","onClose","onSubmit","selectedSize","setSelectedSize","useState","selectedQty","setSelectedQty","_jsx","className","children","_jsxs","onClick","src","UnbrandedClubLogoBlack","alt","concat","moneyFormat","message","connect","state","selectedSizes","addToCart","dispatchSizes","useReducer","selectedSizesReducer","dispatchQty","selectedQtyReducer","selectedProduct","setSelectedProduct","productErrors","setProductErrors","showToast","setShowToast","toastMessage","setToastMessage","setCartItems","navigate","useNavigate","useEffect","timer","setTimeout","clearTimeout","map","index","event","handleOnSubmit","preventDefault","parseInt","target","elements","value","cartItem","uuidv4","size","handleImageOnClick","onChange","e","handleSizeChange","selectSize","disabled","Object","keys","handleQtyChange","quantity","selectQty","Array","Math","min","type","CustomProductModal","prevCartItems","Toast","navigateToCart","initialState","SELECT_QTY","payload","action","SELECT_SIZE","number","Intl","NumberFormat","style","currency","minimumFractionDigits","format"],"sourceRoot":""}